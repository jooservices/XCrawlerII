# https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions
name: XCrawlerII - Build & Tests

# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on
on:
  # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows
  pull_request:
    branches: [ develop ]
    types: [ opened, synchronize ]
  push:
    branches: [ develop ]

concurrency:
  group: staging_build_test_${{ github.head_ref }}
  cancel-in-progress: true

jobs:

  code_standards:
    name: Code standards check
    strategy:
      matrix:
        lint: [ phpmd, phpstan, pint ]

    runs-on:
      - self-hosted
      - ubuntu

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup application
        if: success()
        run: |
          php -r "file_exists('.env') || copy('.env.example', '.env');"
          composer install --no-ansi --no-scripts --no-progress --prefer-dist

      - name: Lint
        run: composer ${{ matrix.lint }}

  lint:
    name: Lint
    runs-on:
      - self-hosted
      - ubuntu
      - X64

    steps:
      - uses: actions/checkout@v3
      - uses: firehed/lint-php-action@v1

  securities:
    name: Securities check
    runs-on:
      - self-hosted
      - ubuntu
      - X64

    needs: [ lint ]
    steps:
      - name: Checkout code
        uses: actions/checkout@main

      - name: Run Codacy Analysis CLI
        uses: codacy/codacy-analysis-cli-action@master

      - name: PHP Security Checker
        uses: StephaneBour/actions-php-security-checker@1.1
        with:
          composer-lock: './composer.lock'

  tests:
    name: Execute UnitTest
    strategy:
      matrix:
        test: [ Core, Client, Jav, Udemy ]
    runs-on:
      - self-hosted
      - ubuntu
    needs: [ securities ]

    services:
      mysql:
        image: mariadb:latest
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: xcrawlerii
        ports:
          - 3306:3306

      redis:
        image: redis
        ports:
          - 6379:6379

      mongo:
        image: mongo:bionic
        options: >-
          --health-cmd mongo
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 27017:27017

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup application
        if: success()
        run: |
          php -r "file_exists('.env') || copy('.env.example', '.env');"
          composer install --no-ansi --no-scripts --no-progress --prefer-dist
          php artisan key:generate
          chmod -R 777 storage bootstrap/cache
          php artisan config:clear
          php artisan migrate:fresh

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        if: success()
        run: |
          ./vendor/bin/phpunit --testsuite=${{ matrix.test }} --coverage-clover coverage-${{ matrix.test }}.xml

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: coverage-reports-${{ matrix.test }}
          path: coverage-${{ matrix.test }}.xml
          overwrite: 'true'
          retention-days: 1

  test_finished:
    name: Upload coverage to codecov.io
    runs-on:
      - self-hosted
      - ubuntu
    needs: [ tests ]

    steps:
      - name: Download build from artifact
        uses: actions/download-artifact@v4
        if: success()
        with:
          path: ./reports

      - name: Upload coverage to codecov.io
        uses: codecov/codecov-action@v4
        if: success()
        with:
          directory: ./reports
          token: ${{ secrets.CODECOV_TOKEN }}
          os: linux-arm64
